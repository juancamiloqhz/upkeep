// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                   String    @id @default(cuid())
  name                 String?
  email                String?   @unique
  emailVerified        DateTime?
  image                String?
  accounts             Account[]
  sessions             Session[]
  role                 Role      @default(USER)
  notes                Note[]
  labels               Label[]
  // Settings
  newItemsToBottom     Boolean   @default(false)
  checkedItemsToBottom Boolean   @default(false)
  linkPreview          Boolean   @default(true)
  theme                String    @default("light")
  // Reminder Defaults
  morning              String    @default("08:00")
  afternoon            String    @default("13:00")
  evening              String    @default("18:00")
  enableSharing        Boolean   @default(true)
}

enum Role {
  USER
  ADMIN
  EDITOR
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


enum Status {
  ACTIVE
  ARCHIVED
  TRASH
  PINNED
}

model Note {
  id        String   @id @default(cuid())
  status    Status   @default(ACTIVE)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  title     String?  @db.VarChar(255)
  content   String?  @db.MediumText
  background String?
  color     String?
  labels    Label[]
  reminder  Reminder?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Label {
  id        String   @id @default(cuid())
  name      String
  color     String?
  notes     Note[]
  user      User     @relation(fields: [userId], references: [id])
  userId    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// https://dba.stackexchange.com/questions/290889/mysql-data-model-design-for-reminders
model Reminder {
  id        String   @id @default(cuid())
  title     String?
  content   String?
  date      DateTime
  note      Note     @relation(fields: [noteId], references: [id])
  noteId    String   @unique
  recurrence Recurrence?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Recurrence {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}